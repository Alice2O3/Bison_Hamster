prog -> prog_start_p EOF
prog_start_p -> prog_start | @
prog_start -> statement statement_p
statement_p -> statement statement_p | @
expression -> atom | infix_expression
infix_expression -> atom expression_operator expression
atom -> const | Identifier
const -> Integer
statement -> block_statement | simple_statement
simple_statement -> identifier_declare_statement | fuction_declare_statement | assign_statement | expression_statement | if_statement | loop_statement | return_statement
block_statement -> Left_big_bracket statement_p Right_big_bracket statement_end_p
statement_end_p -> Statement_end | @
identifier_declare_statement -> identifier_declare_statement_assign | identifier_declare_statement_noassign
identifier_declare_statement_assign -> type Identifier declare_operator expression Statement_end
identifier_declare_statement_noassign -> type Identifier Statement_end
fuction_declare_statement -> type_func Identifier Left_small_bracket param_list Right_small_bracket block_statement
param_list -> param param_p
param_p -> Comma param param_p | @
param -> type Identifier
assign_statement -> assign_statement_sub Statement_end
assign_statement_sub -> Identifier assign_operator expression
expression_statement -> expression Statement_end
if_statement -> If Left_small_bracket expression Right_small_bracket statement
loop_statement -> For Left_small_bracket assign_statement_sub Statement_end expression Statement_end assign_statement_sub Right_small_bracket statement
return_statement -> Return expression Statement_end
type -> Int
type_func -> Int | Void
expression_operator -> Plus | Minus | Equalto | Greater | Smaller | GreaterEqual | SmallerEqual
declare_operator -> Assign
assign_operator -> Assign | AssignAdd | AssignMinus

Symbols:
(0, prog), (1, prog_start_p), (2, EOF), (3, prog_start), (4, statement), (5, statement_p), (6, expression), (7, atom), (8, infix_expression), (9, expression_operator), (10, const), (11, Identifier), (12, Integer), (13, block_statement), (14, simple_statement), (15, identifier_declare_statement), (16, fuction_declare_statement), (17, assign_statement), (18, expression_statement), (19, if_statement), (20, loop_statement), (21, return_statement), (22, Left_big_bracket), (23, Right_big_bracket), (24, statement_end_p), (25, Statement_end), (26, identifier_declare_statement_assign), (27, identifier_declare_statement_noassign), (28, type), (29, declare_operator), (30, type_func), (31, Left_small_bracket), (32, param_list), (33, Right_small_bracket), (34, param), (35, param_p), (36, Comma), (37, assign_statement_sub), (38, assign_operator), (39, If), (40, For), (41, Return), (42, Int), (43, Void), (44, Plus), (45, Minus), (46, Equalto), (47, Greater), (48, Smaller), (49, GreaterEqual), (50, SmallerEqual), (51, Assign), (52, AssignAdd), (53, AssignMinus)
Terminals:
(Return, 41), (For, 40), (Statement_end, 25), (SmallerEqual, 50), (Left_big_bracket, 22), (AssignMinus, 53), (AssignAdd, 52), (Int, 42), (Equalto, 46), (Integer, 12), (Comma, 36), (GreaterEqual, 49), (Right_small_bracket, 33), (Identifier, 11), (Left_small_bracket, 31), (Right_big_bracket, 23), (Greater, 47), (Assign, 51), (Smaller, 48), (Void, 43), (Plus, 44), (EOF, 2), (If, 39), (Minus, 45)
Non_Terminals:
(const, 10), (prog_start_p, 1), (type_func, 30), (simple_statement, 14), (param_p, 35), (type, 28), (param, 34), (statement, 4), (statement_end_p, 24), (block_statement, 13), (identifier_declare_statement, 15), (declare_operator, 29), (return_statement, 21), (fuction_declare_statement, 16), (expression, 6), (expression_statement, 18), (assign_operator, 38), (identifier_declare_statement_assign, 26), (prog, 0), (param_list, 32), (infix_expression, 8), (statement_p, 5), (assign_statement, 17), (identifier_declare_statement_noassign, 27), (expression_operator, 9), (if_statement, 19), (loop_statement, 20), (assign_statement_sub, 37), (prog_start, 3), (atom, 7)

<0> -> <1><2>
<1> -> <3> | @
<3> -> <4><5>
<5> -> <4><5> | @
<6> -> <7> | <8>
<8> -> <7><9><6>
<7> -> <10> | <11>
<10> -> <12>
<4> -> <13> | <14>
<14> -> <15> | <16> | <17> | <18> | <19> | <20> | <21>
<13> -> <22><5><23><24>
<24> -> <25> | @
<15> -> <26> | <27>
<26> -> <28><11><29><6><25>
<27> -> <28><11><25>
<16> -> <30><11><31><32><33><13>
<32> -> <34><35>
<35> -> <36><34><35> | @
<34> -> <28><11>
<17> -> <37><25>
<37> -> <11><38><6>
<18> -> <6><25>
<19> -> <39><31><6><33><4>
<20> -> <40><31><37><25><6><25><37><33><4>
<21> -> <41><6><25>
<28> -> <42>
<30> -> <42> | <43>
<9> -> <44> | <45> | <46> | <47> | <48> | <49> | <50>
<29> -> <51>
<38> -> <51> | <52> | <53>
